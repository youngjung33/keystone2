# This file is automatically generated by Keystone, do not modify it manually.
# Modify your Keystone config when you want to change this.

type User {
  id: ID!
  user_id: String
  pw: PasswordState
  name: String
  contact: String
  company: String
  workplace: String
  position: String
  email: String
  nickname: String
  profilepic: ImageFieldOutput
}

type PasswordState {
  isSet: Boolean!
}

type ImageFieldOutput {
  id: ID!
  filesize: Int!
  width: Int!
  height: Int!
  extension: ImageExtension!
  url: String!
}

enum ImageExtension {
  jpg
  png
  webp
  gif
}

input UserWhereUniqueInput {
  id: ID
  user_id: String
  contact: String
  email: String
  nickname: String
}

input UserWhereInput {
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
  id: IDFilter
  user_id: StringFilter
  name: StringFilter
  contact: StringFilter
  company: StringFilter
  workplace: StringFilter
  position: StringFilter
  email: StringFilter
  nickname: StringFilter
}

input IDFilter {
  equals: ID
  in: [ID!]
  notIn: [ID!]
  lt: ID
  lte: ID
  gt: ID
  gte: ID
  not: IDFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input UserOrderByInput {
  id: OrderDirection
  user_id: OrderDirection
  name: OrderDirection
  contact: OrderDirection
  company: OrderDirection
  workplace: OrderDirection
  position: OrderDirection
  email: OrderDirection
  nickname: OrderDirection
}

enum OrderDirection {
  asc
  desc
}

input UserUpdateInput {
  user_id: String
  pw: String
  name: String
  contact: String
  company: String
  workplace: String
  position: String
  email: String
  nickname: String
  profilepic: ImageFieldInput
}

input ImageFieldInput {
  upload: Upload!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

input UserUpdateArgs {
  where: UserWhereUniqueInput!
  data: UserUpdateInput!
}

input UserCreateInput {
  user_id: String
  pw: String
  name: String
  contact: String
  company: String
  workplace: String
  position: String
  email: String
  nickname: String
  profilepic: ImageFieldInput
}

type equipmentRequestInfo {
  id: ID!
  request_eq_date: DateTime
  request_eq_state: String
  request_eq_address: String
  requested_by: User
  request_items(where: EquipmentRequestItemWhereInput! = {}, orderBy: [EquipmentRequestItemOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: EquipmentRequestItemWhereUniqueInput): [EquipmentRequestItem!]
  request_itemsCount(where: EquipmentRequestItemWhereInput! = {}): Int
}

scalar DateTime @specifiedBy(url: "https://datatracker.ietf.org/doc/html/rfc3339#section-5.6")

input equipmentRequestInfoWhereUniqueInput {
  id: ID
}

input equipmentRequestInfoWhereInput {
  AND: [equipmentRequestInfoWhereInput!]
  OR: [equipmentRequestInfoWhereInput!]
  NOT: [equipmentRequestInfoWhereInput!]
  id: IDFilter
  request_eq_date: DateTimeFilter
  request_eq_state: StringFilter
  request_eq_address: StringFilter
  requested_by: UserWhereInput
  request_items: EquipmentRequestItemManyRelationFilter
}

input DateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: DateTimeFilter
}

input EquipmentRequestItemManyRelationFilter {
  every: EquipmentRequestItemWhereInput
  some: EquipmentRequestItemWhereInput
  none: EquipmentRequestItemWhereInput
}

input equipmentRequestInfoOrderByInput {
  id: OrderDirection
  request_eq_date: OrderDirection
  request_eq_state: OrderDirection
  request_eq_address: OrderDirection
}

input equipmentRequestInfoUpdateInput {
  request_eq_date: DateTime
  request_eq_state: String
  request_eq_address: String
  requested_by: UserRelateToOneForUpdateInput
  request_items: EquipmentRequestItemRelateToManyForUpdateInput
}

input UserRelateToOneForUpdateInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
  disconnect: Boolean
}

input EquipmentRequestItemRelateToManyForUpdateInput {
  disconnect: [EquipmentRequestItemWhereUniqueInput!]
  set: [EquipmentRequestItemWhereUniqueInput!]
  create: [EquipmentRequestItemCreateInput!]
  connect: [EquipmentRequestItemWhereUniqueInput!]
}

input equipmentRequestInfoUpdateArgs {
  where: equipmentRequestInfoWhereUniqueInput!
  data: equipmentRequestInfoUpdateInput!
}

input equipmentRequestInfoCreateInput {
  request_eq_date: DateTime
  request_eq_state: String
  request_eq_address: String
  requested_by: UserRelateToOneForCreateInput
  request_items: EquipmentRequestItemRelateToManyForCreateInput
}

input UserRelateToOneForCreateInput {
  create: UserCreateInput
  connect: UserWhereUniqueInput
}

input EquipmentRequestItemRelateToManyForCreateInput {
  create: [EquipmentRequestItemCreateInput!]
  connect: [EquipmentRequestItemWhereUniqueInput!]
}

type Equipment {
  id: ID!
  equipment_name: String
  equipment_description: String
  equipment_max_quantity: Int
}

input EquipmentWhereUniqueInput {
  id: ID
}

input EquipmentWhereInput {
  AND: [EquipmentWhereInput!]
  OR: [EquipmentWhereInput!]
  NOT: [EquipmentWhereInput!]
  id: IDFilter
  equipment_name: StringFilter
  equipment_description: StringFilter
  equipment_max_quantity: IntFilter
}

input IntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: IntFilter
}

input EquipmentOrderByInput {
  id: OrderDirection
  equipment_name: OrderDirection
  equipment_description: OrderDirection
  equipment_max_quantity: OrderDirection
}

input EquipmentUpdateInput {
  equipment_name: String
  equipment_description: String
  equipment_max_quantity: Int
}

input EquipmentUpdateArgs {
  where: EquipmentWhereUniqueInput!
  data: EquipmentUpdateInput!
}

input EquipmentCreateInput {
  equipment_name: String
  equipment_description: String
  equipment_max_quantity: Int
}

type EquipmentRequestItem {
  id: ID!
  equipment_item: Equipment
  requested_count: Int
}

input EquipmentRequestItemWhereUniqueInput {
  id: ID
}

input EquipmentRequestItemWhereInput {
  AND: [EquipmentRequestItemWhereInput!]
  OR: [EquipmentRequestItemWhereInput!]
  NOT: [EquipmentRequestItemWhereInput!]
  id: IDFilter
  equipment_item: EquipmentWhereInput
  requested_count: IntFilter
}

input EquipmentRequestItemOrderByInput {
  id: OrderDirection
  requested_count: OrderDirection
}

input EquipmentRequestItemUpdateInput {
  equipment_item: EquipmentRelateToOneForUpdateInput
  requested_count: Int
}

input EquipmentRelateToOneForUpdateInput {
  create: EquipmentCreateInput
  connect: EquipmentWhereUniqueInput
  disconnect: Boolean
}

input EquipmentRequestItemUpdateArgs {
  where: EquipmentRequestItemWhereUniqueInput!
  data: EquipmentRequestItemUpdateInput!
}

input EquipmentRequestItemCreateInput {
  equipment_item: EquipmentRelateToOneForCreateInput
  requested_count: Int
}

input EquipmentRelateToOneForCreateInput {
  create: EquipmentCreateInput
  connect: EquipmentWhereUniqueInput
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  createUser(data: UserCreateInput!): User
  createUsers(data: [UserCreateInput!]!): [User]
  updateUser(where: UserWhereUniqueInput!, data: UserUpdateInput!): User
  updateUsers(data: [UserUpdateArgs!]!): [User]
  deleteUser(where: UserWhereUniqueInput!): User
  deleteUsers(where: [UserWhereUniqueInput!]!): [User]
  createequipmentRequestInfo(data: equipmentRequestInfoCreateInput!): equipmentRequestInfo
  createEquipmentRequestInfos(data: [equipmentRequestInfoCreateInput!]!): [equipmentRequestInfo]
  updateequipmentRequestInfo(where: equipmentRequestInfoWhereUniqueInput!, data: equipmentRequestInfoUpdateInput!): equipmentRequestInfo
  updateEquipmentRequestInfos(data: [equipmentRequestInfoUpdateArgs!]!): [equipmentRequestInfo]
  deleteequipmentRequestInfo(where: equipmentRequestInfoWhereUniqueInput!): equipmentRequestInfo
  deleteEquipmentRequestInfos(where: [equipmentRequestInfoWhereUniqueInput!]!): [equipmentRequestInfo]
  createEquipment(data: EquipmentCreateInput!): Equipment
  createEquipments(data: [EquipmentCreateInput!]!): [Equipment]
  updateEquipment(where: EquipmentWhereUniqueInput!, data: EquipmentUpdateInput!): Equipment
  updateEquipments(data: [EquipmentUpdateArgs!]!): [Equipment]
  deleteEquipment(where: EquipmentWhereUniqueInput!): Equipment
  deleteEquipments(where: [EquipmentWhereUniqueInput!]!): [Equipment]
  createEquipmentRequestItem(data: EquipmentRequestItemCreateInput!): EquipmentRequestItem
  createEquipmentRequestItems(data: [EquipmentRequestItemCreateInput!]!): [EquipmentRequestItem]
  updateEquipmentRequestItem(where: EquipmentRequestItemWhereUniqueInput!, data: EquipmentRequestItemUpdateInput!): EquipmentRequestItem
  updateEquipmentRequestItems(data: [EquipmentRequestItemUpdateArgs!]!): [EquipmentRequestItem]
  deleteEquipmentRequestItem(where: EquipmentRequestItemWhereUniqueInput!): EquipmentRequestItem
  deleteEquipmentRequestItems(where: [EquipmentRequestItemWhereUniqueInput!]!): [EquipmentRequestItem]
  endSession: Boolean!
  authenticateUserWithPassword(email: String!, pw: String!): UserAuthenticationWithPasswordResult
}

union UserAuthenticationWithPasswordResult = UserAuthenticationWithPasswordSuccess | UserAuthenticationWithPasswordFailure

type UserAuthenticationWithPasswordSuccess {
  sessionToken: String!
  item: User!
}

type UserAuthenticationWithPasswordFailure {
  message: String!
}

type Query {
  users(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: UserWhereUniqueInput): [User!]
  user(where: UserWhereUniqueInput!): User
  usersCount(where: UserWhereInput! = {}): Int
  equipmentRequestInfos(where: equipmentRequestInfoWhereInput! = {}, orderBy: [equipmentRequestInfoOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: equipmentRequestInfoWhereUniqueInput): [equipmentRequestInfo!]
  equipmentRequestInfo(where: equipmentRequestInfoWhereUniqueInput!): equipmentRequestInfo
  equipmentRequestInfosCount(where: equipmentRequestInfoWhereInput! = {}): Int
  equipments(where: EquipmentWhereInput! = {}, orderBy: [EquipmentOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: EquipmentWhereUniqueInput): [Equipment!]
  equipment(where: EquipmentWhereUniqueInput!): Equipment
  equipmentsCount(where: EquipmentWhereInput! = {}): Int
  equipmentRequestItems(where: EquipmentRequestItemWhereInput! = {}, orderBy: [EquipmentRequestItemOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: EquipmentRequestItemWhereUniqueInput): [EquipmentRequestItem!]
  equipmentRequestItem(where: EquipmentRequestItemWhereUniqueInput!): EquipmentRequestItem
  equipmentRequestItemsCount(where: EquipmentRequestItemWhereInput! = {}): Int
  keystone: KeystoneMeta!
  authenticatedItem: AuthenticatedItem
}

union AuthenticatedItem = User

type KeystoneMeta {
  adminMeta: KeystoneAdminMeta!
}

type KeystoneAdminMeta {
  lists: [KeystoneAdminUIListMeta!]!
  list(key: String!): KeystoneAdminUIListMeta
}

type KeystoneAdminUIListMeta {
  key: String!
  itemQueryName: String!
  listQueryName: String!
  hideCreate: Boolean!
  hideDelete: Boolean!
  path: String!
  label: String!
  singular: String!
  plural: String!
  description: String
  initialColumns: [String!]!
  pageSize: Int!
  labelField: String!
  fields: [KeystoneAdminUIFieldMeta!]!
  groups: [KeystoneAdminUIFieldGroupMeta!]!
  initialSort: KeystoneAdminUISort
  isHidden: Boolean!
  isSingleton: Boolean!
}

type KeystoneAdminUIFieldMeta {
  path: String!
  label: String!
  description: String
  isOrderable: Boolean!
  isFilterable: Boolean!
  isNonNull: [KeystoneAdminUIFieldMetaIsNonNull!]
  fieldMeta: JSON
  viewsIndex: Int!
  customViewsIndex: Int
  createView: KeystoneAdminUIFieldMetaCreateView!
  listView: KeystoneAdminUIFieldMetaListView!
  itemView(id: ID): KeystoneAdminUIFieldMetaItemView
  search: QueryMode
}

enum KeystoneAdminUIFieldMetaIsNonNull {
  read
  create
  update
}

type KeystoneAdminUIFieldMetaCreateView {
  fieldMode: KeystoneAdminUIFieldMetaCreateViewFieldMode!
}

enum KeystoneAdminUIFieldMetaCreateViewFieldMode {
  edit
  hidden
}

type KeystoneAdminUIFieldMetaListView {
  fieldMode: KeystoneAdminUIFieldMetaListViewFieldMode!
}

enum KeystoneAdminUIFieldMetaListViewFieldMode {
  read
  hidden
}

type KeystoneAdminUIFieldMetaItemView {
  fieldMode: KeystoneAdminUIFieldMetaItemViewFieldMode
  fieldPosition: KeystoneAdminUIFieldMetaItemViewFieldPosition
}

enum KeystoneAdminUIFieldMetaItemViewFieldMode {
  edit
  read
  hidden
}

enum KeystoneAdminUIFieldMetaItemViewFieldPosition {
  form
  sidebar
}

enum QueryMode {
  default
  insensitive
}

type KeystoneAdminUIFieldGroupMeta {
  label: String!
  description: String
  fields: [KeystoneAdminUIFieldMeta!]!
}

type KeystoneAdminUISort {
  field: String!
  direction: KeystoneAdminUISortDirection!
}

enum KeystoneAdminUISortDirection {
  ASC
  DESC
}
